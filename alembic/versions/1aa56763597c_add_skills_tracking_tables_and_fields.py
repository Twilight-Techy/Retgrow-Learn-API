"""Add skills tracking tables and fields

Revision ID: 1aa56763597c
Revises: dd70a3bdb5bd
Create Date: 2025-09-24 01:46:31.141376

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1aa56763597c'
down_revision: Union[str, None] = 'dd70a3bdb5bd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course_skills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('course_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('overall_percent', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_id', 'skill_id', name='uq_course_skill')
    )
    op.create_index(op.f('ix_course_skills_course_id'), 'course_skills', ['course_id'], unique=False)
    op.create_index(op.f('ix_course_skills_skill_id'), 'course_skills', ['skill_id'], unique=False)
    op.create_table('module_skills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('module_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('percent', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('module_id', 'skill_id', name='uq_module_skill')
    )
    op.create_index(op.f('ix_module_skills_module_id'), 'module_skills', ['module_id'], unique=False)
    op.create_index(op.f('ix_module_skills_skill_id'), 'module_skills', ['skill_id'], unique=False)
    op.create_table('quiz_skills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('percent', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('quiz_id', 'skill_id', name='uq_quiz_skill')
    )
    op.create_index(op.f('ix_quiz_skills_quiz_id'), 'quiz_skills', ['quiz_id'], unique=False)
    op.create_index(op.f('ix_quiz_skills_skill_id'), 'quiz_skills', ['skill_id'], unique=False)
    op.add_column('user_lessons', sa.Column('applied_to_skills', sa.Boolean(), nullable=False, server_default=sa.false()))
    op.add_column('user_quizzes', sa.Column('applied_to_skills', sa.Boolean(), nullable=False, server_default=sa.false()))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user_quizzes', 'applied_to_skills')
    op.drop_column('user_lessons', 'applied_to_skills')
    op.drop_index(op.f('ix_quiz_skills_skill_id'), table_name='quiz_skills')
    op.drop_index(op.f('ix_quiz_skills_quiz_id'), table_name='quiz_skills')
    op.drop_table('quiz_skills')
    op.drop_index(op.f('ix_module_skills_skill_id'), table_name='module_skills')
    op.drop_index(op.f('ix_module_skills_module_id'), table_name='module_skills')
    op.drop_table('module_skills')
    op.drop_index(op.f('ix_course_skills_skill_id'), table_name='course_skills')
    op.drop_index(op.f('ix_course_skills_course_id'), table_name='course_skills')
    op.drop_table('course_skills')
    # ### end Alembic commands ###
